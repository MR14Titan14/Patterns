@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Companion {
  + validateGit(String?): Boolean
  + validateNames(String): Boolean
  + validateMail(String?): Boolean
  + validateTelegram(String?): Boolean
  + validatePhone(String?): Boolean
   ids: Int
}
class Companion {
  + readFromTxt(String): List<Student>
  + writeToTxt(String, List<Student>): Unit
}
class DataList<T> {
  + DataList(List<T>): 
  + select(Int): Unit
   dataOfRows: List<List<Object>>
   table: DataTable
   names: String[]
   data: List<T>
   selected: List<Int>
}
class DataListStudentShort {
  + DataListStudentShort(List<StudentShort>): 
   dataOfRows: List<List<Object>>
   names: String[]
}
class DataTable {
  + DataTable(List<List<Object>>): 
  + getElement(Int, Int): Object?
   rows: Int
   columns: Int
}
class Student {
  + Student(String, String, String): 
  + Student(String, String, String, String?, String?, String?, String?): 
  + Student(HashMap<String, Object>): 
  + Student(String): 
  + toString(): String
  - hasGit(): Boolean
  + setContacts(String?, String?, String?): Unit
  + validate(): Boolean
  - hasContact(): Boolean
   name: String
   shortName: String
   phone: String?
   lastname: String
   contact: String
   info: String
   fathername: String
   mail: String?
   telegram: String?
}
class StudentShort {
  + StudentShort(Student): 
  + StudentShort(String): 
  + toString(): String
   contact: String?
   fio: String?
}
class StudentSuper {
  + StudentSuper(): 
   git: String?
   id: Int
}

Companion             +-[#820000,plain]-  Student              
Companion             +-[#820000,plain]-  StudentSuper         
DataListStudentShort  -[#000082,plain]-^  DataList             
Student               -[#000082,plain]-^  StudentSuper         
StudentShort          -[#000082,plain]-^  StudentSuper         
@enduml
